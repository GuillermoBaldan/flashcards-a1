/* Contenedor de la tarjeta */
.card-container {
  perspective: 1000px;
  width: 83%; /* Set width to 83% as per user request */
  max-width: 980px; /* límite máximo desktop */
  height: auto; /* Allow content to define height */
  margin: 0 auto; /* Center the card */
}

.card {
  position: relative;
  width: 100%;
  min-height: clamp(180px, 28vh, 420px);
}

/* área interna para el texto: limita altura máxima y evita scroll interno */
.card-content {
  width: 100%;
  max-height: min(52vh, 520px); /* no crece más allá de esto */
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden; /* evitar que el contenido sobresalga hacia la barra */
}
.card.flipped {
  transform: none; /* Disable 3D flip effect since we render a single side */
}

.card-front,
.card-back {
  position: static; /* Use normal flow so content pushes buttons down */
  width: 100%;
  height: auto;
  min-height: 160px; /* altura mínima para permitir ajuste por alto */
  display: flex;
  justify-content: center;
  align-items: center;
  /* Ensure the back of the card is not interactive when not visible */
  pointer-events: auto;
  box-sizing: border-box; /* Include padding in the element's total width and height */
  padding: 1.5rem; /* Add padding to prevent text from touching edges */
  overflow: hidden; /* impedir solape con elementos superiores */
}

.card-front {
  /* normal flow */
}

.card.flipped .card-front {
  /* no special behavior needed */
}

.card-back {
  transform: none;
}

.card.flipped .card-back {
  /* normal flow */
}

/* contenedor de la barra de progreso para que quede por encima en el apilado */
.progress-container {
  position: relative;
  z-index: 20;
}

.custom-button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.5em 1em;
  font-size: 1em;
  font-family: inherit;
  color: white;
  cursor: pointer;
  transition: background-color 0.25s, border-color 0.25s;
  font-weight: normal !important;
}

.flip-button {
  background-color: #3b82f6 !important; /* Blue */
}

.flip-button:hover {
  background-color: #1d4ed8 !important;
}

.success-button {
  background-color: #22c55e; /* Green */
}

.success-button:hover {
  background-color: #15803d;
}

.failure-button {
  background-color: #ef4444; /* Red */
}

.failure-button:hover {
  background-color: #b91c1c;
}

/* Contenedor de botones de respuesta */
.answer-buttons {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0; /* usamos márgenes en los hijos como fallback */
  margin-top: 20px; /* igual que .study-page .button-container */
  flex-wrap: wrap; /* mejor en pantallas pequeñas */
  position: relative;
  z-index: 10;
}

/* Evitar que los hijos crezcan y controlar el reparto del espacio + separación vía márgenes */
.answer-buttons > * {
  flex: 0 0 auto;
  margin: 0 1rem;
}
.answer-buttons > *:first-child { margin-left: 0; }
.answer-buttons > *:last-child { margin-right: 0; }

/* Mantenerlos en una sola fila en pantallas medianas/grandes */
@media (min-width: 640px) {
  .answer-buttons {
    flex-wrap: nowrap;
  }
}